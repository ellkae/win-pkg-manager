Windows Package Manager

The main goal of this application is to meet the needs of the Western Washington University -
Computer Science department. However, the design kept general purpose use in mind.

The `winpkg` CLI frontend was inspired by FreeBSD's portsnap & portupgrade suite, and those
familiar with the latter may recognize most of the flags and equivalent functionalities.

Features:

TODO

Requirements:

Python 2.7
sqlite
urllib2
git -- (for winsync)


Installation:

Python 2.7 must be installed and include the following packages: sqlite, time, logging, ...

A sqlite database is not required to be setup before starting the application. If one is not setup, the name of the database should be configured. Upon startup of the program, the database will be created and include all necessary tables; if the tables already exist then this will be detected. 

Git must be installed, as that is how the package tree is kept up to date.

[MORE TO COME]


Basic Usage:

TODO

    Installing new packages:

    Check installed packages for new versions:

    Upgrading installed packages:

    Create new packages for winpkg:


Programmer's Guide:

wpm_db.py -> This file contains the database object and member functions that perform typical operations on a database (i.e. insert, update, etc). The member functions are primarily designed for the builtin database schema but generatlized to the point where the addition of tables may not require modification to the existing functions (this case is not guaranteed). Some of the functions perform specialized operations given a specific table, i.e. when the function update is given the table OldFiles a text insertion is performed to allow for incrementing a counter.

db_wrapper.py -> This file acts as a wedge between the database operations (i.e. queries) and the programmer. The functions it provides are specific to the applications intended use which is package management. 


-------------------------------------------------------------------------------
Western Washington University
Computer Science Department - 2011
Sebastian J. Imlay
Joshua Stein
T.J. Telan
